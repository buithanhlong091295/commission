syntax = "proto3";
package types;

option go_package = "xtek/exchange/__SERVICE_NAME__/pb/trade/types";

message Kline {
    string qty = 1;
    string quoteAssetVolume = 2;
    string open = 3;
    string close = 4;
    string high = 5;
    string low = 6;
    int32 numberOfTrade = 7;
    string takerBuyBase = 8;
    string takerBuyQuote = 9;
    int64 timestamp = 10;
  }
  
  message AggregateTrade {
    string price = 1;
    string qty = 2;
    string firstID = 3;
    string lastID = 4;
    int64 timestamp = 5;
    bool isMaker = 6; // true: buy
  }
  message PairsCoinList {
    string pairCoin = 1;
    // string priceChange = 2;
    string priceChangePercent = 3;
    // string prevClosePrice = 4;
    string lastPrice = 5;
    // string lastQty = 6;
    // string bidPrice = 7;
    // string askPrice = 8;
    string openPrice = 9;
    string highPrice = 10;
    string lowPrice = 11;
    string volume = 12;
    // string quoteVolume = 13;
    int64 openTime = 14;
    int64 closeTime = 15;
    // string firstId = 16;
    // string lastId = 17;
    string symbol = 18;
    string quoteCoinLogoURL = 19;
  }
  
  message TradeModel {
    string makerOrderID = 1;
    string takerOrderID = 2;
    string pricePoint = 3;
    string qty = 4;
    string baseCoin = 5;
    string quoteCoin = 6;
    bool isBuyerMaker = 7;
    string makerUserID = 8;
    string takerUserID = 9;
  }
  
  message CreateTradeErrorResponse {
    string makerOrderID = 1;
    string takerOrderID = 2;
    string messsage = 3;
  }
  
  message CreateTradeSuccessResponse {
    string tradeID = 1;
  }
  
  message PairCoin {
    string baseCoin = 1;
    int32 baseCoinDecimal = 2;
    string quoteCoin = 3;
    int32 quoteCoinDecimal = 4;
    bool isActive = 5;
    PriceFilter priceFilter = 6;
    QtyFilter qtyFilter = 7;
    string takeFee = 8;
    string makeFee = 9;
  }
  message PriceFilter {
    string minPrice = 1;
    string maxPrice = 2;
  }
  message QtyFilter {
    string minQty = 1;
    string maxQty = 2;
  }
  
  message TradeHistory {
    string pairCoin = 1;
    string pricePoint = 2;
    string qty = 3;
    int64 timestamp = 4;
    bool isBuyerMaker = 5;
  }
  message AdminTradeHistory {
    string pairCoin = 1;
    string pricePoint = 2;
    string qty = 3;
    int64 timestamp = 4;
    bool isBuyerMaker = 5;
    string makerEmail = 6;
    string takerEmail = 7;
  }
  
  message Price {
    string price = 1;
    string baseCoin = 2;
    string quoteCoin = 3;
  }
  enum TradeStatus {
    PENDING = 0;
    SUCCESS = 1;
    FAIL = 2;
  }

message TradeEvent {
  string userID = 1;
}