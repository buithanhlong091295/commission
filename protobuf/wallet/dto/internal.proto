syntax = "proto3";
package dto;

option go_package = "xtek/exchange/__SERVICE_NAME__/pb/wallet/dto";

import "wallet/types/wallet.proto";
import "paginate/paginate.proto";
import "validate/validate.proto";

message GetCoinTypesResponse { repeated types.Type listing = 1; }

message CreateBalanceDefaultRequest {
  string userID = 1 [ (validate.rules).string = {min_len : 1} ];
}
message CreateBalanceDefaultResponse { bool result = 1; }

message CreateCoinRequest {
  string coin = 1 [ (validate.rules).string = {min_len : 1} ];
  string name = 2 [ (validate.rules).string = {min_len : 1} ];
  string logoUrl = 3 [ (validate.rules).string = {min_len : 1} ];
}
message CreateCoinResponse { string result = 1; }

message HandleDepositnWithWalletRequest {
  string address = 1 [ (validate.rules).string = {min_len : 1} ];
  double amount = 2;
  string coin = 3 [ (validate.rules).string = {min_len : 1} ];
  string txID = 4 [ (validate.rules).string = {min_len : 1} ];
  string createdAt = 5 [ (validate.rules).string = {min_len : 1} ];
}
message HandleDepositnWithWalletResponse { bool result = 1; }

message HandleDepositnWithdrawalWalletRequest {
  string address = 1 [ (validate.rules).string = {min_len : 1} ];
  double amount = 2 [ (validate.rules).double = {gte : 1} ];
  string coin = 3 [ (validate.rules).string = {min_len : 1} ];
  string txID = 4 [ (validate.rules).string = {min_len : 1} ];
  string createdAt = 5 [ (validate.rules).string = {min_len : 1} ];
}
message HandleDepositnWithdrawalWalletResponse { bool result = 1; }

message ValidateAvailableBalanceRequest {
  string userID = 1 [ (validate.rules).string = {min_len : 1} ];
  string coin = 2 [ (validate.rules).string = {min_len : 1} ];
  string amount = 3 [ (validate.rules).string = {min_len : 1} ];
}

message ValidateAvailableBalanceResponse { bool isVaild = 1; }

message ValidateBalanceRequest {
  string userID = 1 [ (validate.rules).string = {min_len : 1} ];
  string coin = 2 [ (validate.rules).string = {min_len : 1} ];
  string amount = 3 [ (validate.rules).string = {min_len : 1} ];
}

message ValidateBalanceResponse { bool isVaild = 1; }

message GetBalanceByUserIDnCoinRequest {
  string userID = 1 [ (validate.rules).string = {min_len : 1} ];
  string coin = 2 [ (validate.rules).string = {min_len : 1} ];
}

message GetBalanceByUserIDnCoinResponse { string amount = 1; }

message GenerateUserAddressRequest {
  string coin = 1;
  string userID = 2;
}

message GetCoinsResponse { repeated types.Coin listings = 1; }

message GetBalancesByUserIDNTypeRequest {
  int32 type = 1;
  string userID = 2;
}

message GetBalancesByUserIDNTypeResponse {
  repeated types.InternalBalance listings = 1;
}

message GetBalanceByUserIDnCoinnTypeRequest {
  string userID = 1 [ (validate.rules).string = {min_len : 1} ];
  string coin = 2 [ (validate.rules).string = {min_len : 1} ];
  int32 type = 3; 
}

message GetBalanceByUserIDnCoinnTypeResponse {
  string amount = 1;
}